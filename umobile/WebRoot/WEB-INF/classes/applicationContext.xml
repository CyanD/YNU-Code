<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	        http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
<context:annotation-config />
<context:component-scan base-package="com"/>
<bean id="logInterceptor" class="com.aop.LogInterceptor"></bean>
	<aop:config>
		<aop:aspect id="logAspect" ref="logInterceptor">
			<aop:before method="before" pointcut="execution(public * com.service..*.find(..))" />
			<aop:around method="aroundMethod" pointcut ="execution(public * com.service..*.find(..))"/>
		</aop:aspect>
	</aop:config>
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>

	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="javax.persistence.validation.mode">none</prop> 
			</props>
		</property>
	</bean>
<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  <property name="sessionFactory" ref="sessionFactory" />
</bean>
<aop:config>
  <aop:pointcut id="bussinessService" expression="execution(public * com.service..*.*(..))"/>
  <aop:advisor advice-ref="txAdvice" pointcut-ref="bussinessService"/>
  </aop:config>
  <tx:advice id="txAdvice" transaction-manager="txManager">
  <tx:attributes>
    <tx:method name="find*"  read-only="true"/>
    <tx:method name="update*"  propagation="REQUIRED"/>
    <tx:method name="save*"  propagation="REQUIRED"/>
    <tx:method name="add*"  propagation="SUPPORTS"/>
    <tx:method name="delete*"  propagation="REQUIRED"/>
    <tx:method name="remove*"  propagation="SUPPORTS"/>
  </tx:attributes>
  </tx:advice>
  <!-- <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean> -->
  
	<bean id="taskService" class="com.service.impl.PublicserviceActivityServiceImpl"></bean>
	<bean  id="autoTask"  class ="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property  name="targetObject">
	     	<ref  bean="taskService"/>  
	    </property>
	    <property name="targetMethod">
	      	<value>doTask</value>
	    </property>
	</bean>
	<bean id="autoTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="cronExpression"><value>0 30 19 * * ?</value></property>
		<property name="jobDetail"><ref bean="autoTask" /></property>
	</bean>
	<bean id ="triggersStarter" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
		<property  name="triggers">  
	       <list>  
	    	   <ref bean="autoTaskTrigger"/>
	       </list>  
		</property>
		<property name="autoStartup">
	     	<value>false</value>
		</property>
	</bean> 

</beans>